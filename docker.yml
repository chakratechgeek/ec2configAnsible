---
- name: Perform tasks on EC2 instance
  hosts: ec2_instances  # Replace with your EC2 host or inventory group
  become: true
  gather_facts: true

  tasks:
    - name: Remove the directory if it exists
      file:
        path: /root/django/app  # Replace with the directory path you want to remove
        state: absent


    - name: Create the directory if it exists
      file:
        path: /root/django/app  # Replace with the directory path you want to remove
        state: directory 


    - name: Git pull the repository containing Django app
      become: true
      git:
        repo: "https://github.com/chakratechgeek/mywebpage.git"  # Replace with your repository URL
        dest: /root/django/app  # Replace with the local path where the app should be cloned
        update: yes

    - name: Grant 755 permissions to the shell script
      file:
        path: /root/django/app/user_data_script.sh  # Replace with the path to your shell script
        mode: "0755"

    - name: Run the shell script
      become: true
      command: /root/django/app/user_data_script.sh 
      ignore_errors: yes

    - name: Stop already running container
      become: true
      shell: |
        docker ps -q --filter "name=django_app_container"  # Replace your_container_name with a unique identifier for your container
      register: running_container

    - name: Stop the container if it's running
      become: true
      shell: "docker rm -f django_app_container" 
      when: running_container.stdout_lines | length > 0

    - name: Check if Docker images exist
      shell: "docker images -q"
      register: docker_images

    - name: Delete Docker images if they exist
      shell: "docker rmi -f {{ item }}"
      loop: "{{ docker_images.stdout_lines }}"
      when: docker_images.stdout_lines | length > 0

    - name: Create a container/image
      become: true
      shell: |
        cd /root/django/app  # Replace with the path to your Django app
        docker build -t django_app .  # Replace your_image_name with your desired image name


    - name: Run newly created container
      become: true
      shell: |
        docker run -d --name django_app_container -p 8000:8000 django_app  # Replace your_new_container_name with the desired container name and your_image_name with the image name

